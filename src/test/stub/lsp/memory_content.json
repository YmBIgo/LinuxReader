[
    {
        "line": 1366,
        "character": 0, 
        "functionName": "copy_page_range",
        "firstLine": "copy_page_range(struct vm_area_struct *dst_vma, struct vm_area_struct *src_vma)",
        "content": "int\ncopy_page_range(struct vm_area_struct *dst_vma, struct vm_area_struct *src_vma)\n{\n\tpgd_t *src_pgd, *dst_pgd;\n\tunsigned long addr = src_vma->vm_start;\n\tunsigned long end = src_vma->vm_end;\n\tstruct mm_struct *dst_mm = dst_vma->vm_mm;\n\tstruct mm_struct *src_mm = src_vma->vm_mm;\n\tstruct mmu_notifier_range range;\n\tunsigned long next;\n\tbool is_cow;\n\tint ret;\n\n\tif (!vma_needs_copy(dst_vma, src_vma))\n\t\treturn 0;\n\n\tif (is_vm_hugetlb_page(src_vma))\n\t\treturn copy_hugetlb_page_range(dst_mm, src_mm, dst_vma, src_vma);\n\n\t/*\n\t * We need to invalidate the secondary MMU mappings only when\n\t * there could be a permission downgrade on the ptes of the\n\t * parent mm. And a permission downgrade will only happen if\n\t * is_cow_mapping() returns true.\n\t */\n\tis_cow = is_cow_mapping(src_vma->vm_flags);\n\n\tif (is_cow) {\n\t\tmmu_notifier_range_init(&range, MMU_NOTIFY_PROTECTION_PAGE,\n\t\t\t\t\t0, src_mm, addr, end);\n\t\tmmu_notifier_invalidate_range_start(&range);\n\t\t/*\n\t\t * Disabling preemption is not needed for the write side, as\n\t\t * the read side doesn't spin, but goes to the mmap_lock.\n\t\t *\n\t\t * Use the raw variant of the seqcount_t write API to avoid\n\t\t * lockdep complaining about preemptibility.\n\t\t */\n\t\tvma_assert_write_locked(src_vma);\n\t\traw_write_seqcount_begin(&src_mm->write_protect_seq);\n\t}\n\n\tret = 0;\n\tdst_pgd = pgd_offset(dst_mm, addr);\n\tsrc_pgd = pgd_offset(src_mm, addr);\n\tdo {\n\t\tnext = pgd_addr_end(addr, end);\n\t\tif (pgd_none_or_clear_bad(src_pgd))\n\t\t\tcontinue;\n\t\tif (unlikely(copy_p4d_range(dst_vma, src_vma, dst_pgd, src_pgd,\n\t\t\t\t\t    addr, next))) {\n\t\t\tret = -ENOMEM;\n\t\t\tbreak;\n\t\t}\n\t} while (dst_pgd++, src_pgd++, addr = next, addr != end);\n\n\tif (is_cow) {\n\t\traw_write_seqcount_end(&src_mm->write_protect_seq);\n\t\tmmu_notifier_invalidate_range_end(&range);\n\t}\n\treturn ret;\n}"
    },
    {
        "line": 933,
        "character": 5,
        "functionName": "copy_mc_user_highpage",
        "firstLine": "\\tif (copy_mc_user_highpage(&new_folio->page, page, addr, src_vma))",
        "content": "",
        "skipGetFunction": true
    }
]